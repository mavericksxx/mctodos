rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Tasks collection rules
    match /tasks/{taskId} {
      // Allow reading tasks
      allow read: if true;
      
      // Allow creating tasks if the data is properly formatted
      allow create: if 
        // Required fields are present
        request.resource.data.keys().hasAll(['description', 'priority', 'completed', 'timestamp']) &&
        // Description is a string and not empty
        request.resource.data.description is string &&
        request.resource.data.description.size() > 0 &&
        request.resource.data.description.size() <= 500 &&
        // Priority is one of the allowed values
        request.resource.data.priority in ['high', 'medium', 'low'] &&
        // Completed is boolean
        request.resource.data.completed is bool &&
        // Timestamp is a valid timestamp
        request.resource.data.timestamp is timestamp;

      // Allow updating tasks if the update is valid
      allow update: if
        // Check if all required fields are present
        request.resource.data.keys().hasAll(['description', 'priority', 'completed', 'timestamp']) &&
        // Validate description
        request.resource.data.description is string &&
        request.resource.data.description.size() > 0 &&
        request.resource.data.description.size() <= 500 &&
        // Validate priority
        request.resource.data.priority in ['high', 'medium', 'low'] &&
        // Validate completed status
        request.resource.data.completed is bool &&
        // Validate timestamps
        request.resource.data.timestamp is timestamp &&
        (!request.resource.data.keys().hasAny(['completedAt']) || 
          request.resource.data.completedAt is timestamp);

      // Allow deleting tasks
      allow delete: if true;
    }

    // Deny access to any other collections by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 